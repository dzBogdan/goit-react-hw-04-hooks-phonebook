{"version":3,"sources":["component/ContactForm.js","component/ContactsList.js","component/phonebook.js","reportWebVitals.js","index.js"],"names":["ContactForm","useState","name","setName","number","setNumber","className","type","value","onChange","event","currentTarget","onClick","handleButtonAdd","id","shortid","generate","ContactList","contacts","onDeleteContact","map","item","Phonebook","setContacts","filter","setFilter","normolizefilter","toLowerCase","visibleContacts","contact","includes","element","arr","find","x","window","alert","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAMe,SAASA,IAAe,IAAD,EACVC,mBAAS,IADC,mBAC3BC,EAD2B,KACrBC,EADqB,OAENF,mBAAS,IAFH,mBAE3BG,EAF2B,KAEnBC,EAFmB,KAyBlC,OACI,gCACI,wBAAOC,UAAU,kBAAjB,+BACI,uBAAOC,KAAK,OACRC,MAAON,EACPO,SA1Bc,SAAAC,GAC1BP,EAAQO,EAAMC,cAAcH,QA0BhBF,UAAU,mBAGlB,uBACA,wBAAOA,UAAU,oBAAjB,4CACI,uBAAOC,KAAK,OACRC,MAAOJ,EACPK,SA5BgB,SAAAC,GAC5BL,EAAUK,EAAMC,cAAcH,QA4BlBF,UAAU,qBAGlB,uBACA,wBAAQC,KAAK,SAASK,QA7BN,SAAlBC,EAAkBH,GAOpBG,EANgB,CACZC,GAAIC,IAAQC,WACZd,KAAMA,EACNE,OAAQA,KA0BJE,UAAU,oBADd,yGAEA,0BC9CG,SAASW,EAAT,GAAqD,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,gBAE5C,OACI,gCACI,kFACA,oBAAIb,UAAU,gBAAd,SACKY,EAASE,KAAI,SAAAC,GAAI,OACd,qBAAkBf,UAAU,aAA5B,UACI,sCAAOe,EAAKnB,KAAZ,cAAsBmB,EAAKjB,UAC3B,wBAAQE,UAAU,eAAeM,QAAS,kBAAMO,EAAgBE,EAAKP,KAArE,0DAFKO,EAAKP,YCJnB,SAASQ,IAAa,IAAD,EACHrB,mBAAS,CACtC,CAAEa,GAAI,OAAQZ,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEU,GAAI,OAAQZ,KAAM,iBAAkBE,OAAQ,aAC9C,CAAEU,GAAI,OAAQZ,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEU,GAAI,OAAQZ,KAAM,iBAAkBE,OAAQ,eALd,mBAC3Bc,EAD2B,KACjBK,EADiB,OAONtB,mBAAS,IAPH,mBAO3BuB,EAP2B,KAOnBC,EAPmB,KAoCtBC,EAAkBF,EAAOG,cACzBC,EAAkBV,EAASM,QAAO,SAAAK,GAAO,OAAIA,EAAQ3B,KAAKyB,cAAcG,SAASJ,MACvF,OACI,gCAEI,6HACA,cAAC1B,EAAD,CAAaa,gBA5BC,SAAAkB,GAEtB,IAAuBC,EAAK9B,GAAL8B,EACYd,EADPhB,EACgB6B,EAAQ7B,KADf8B,EAAIC,MAAK,SAAAC,GAAC,OAAIA,EAAEhC,OAASA,MAK1DiC,OAAOC,MAAP,+HAAsCL,EAAQ7B,KAA9C,+IAEAqB,GAAY,SAAAc,GAAS,4BAAQA,EAAUnB,UAAlB,CAA2Ba,UAoB5C,iIACA,uBACA,uBAAOxB,KAAK,OACZE,SApCqB,SAAAC,GAC7Be,EAAUf,EAAMC,cAAcH,QAoCtBF,UAAU,kBAEV,cAAC,EAAD,CAAcY,SAAUU,EAAiBT,gBAnB9B,SAACL,GAClBS,GAAY,SAAAc,GAAS,OAAGA,EAAUb,QAAO,SAAAK,GAAO,OAAIA,EAAQf,KAAOA,cCvC7E,IAYewB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9b4f0b06.chunk.js","sourcesContent":["import { useState} from 'react';\r\nimport shortid from 'shortid';\r\nimport './phonebook.moduls.css';\r\n\r\n\r\n\r\nexport default function ContactForm() {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleInputNameChenge = event => {\r\n        setName(event.currentTarget.value);\r\n        \r\n                 \r\n    }\r\n\r\n    const handleInputNumberChenge = event => {\r\n        setNumber(event.currentTarget.value);\r\n    }\r\n\r\n    const handleButtonAdd = event => {\r\n        const element = {\r\n            id: shortid.generate(),\r\n            name: name,\r\n            number: number\r\n        }\r\n        \r\n        handleButtonAdd(element);\r\n          \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"phoneBook__name\">Имя\r\n                <input type=\"text\"\r\n                    value={name}\r\n                    onChange={handleInputNameChenge}\r\n                    className=\"name__input\"\r\n                />\r\n            </label>\r\n            <br />\r\n            <label className=\"phoneBook__number\"> Номер\r\n                <input type=\"text\"\r\n                    value={number}\r\n                    onChange={handleInputNumberChenge}\r\n                    className=\"number__input\"\r\n                />\r\n            </label>\r\n            <br />\r\n            <button type=\"button\" onClick={handleButtonAdd}\r\n                className=\"phoneBook__button\">Добавить контакт</button>\r\n            <br />\r\n        </div>);\r\n}\r\n\r\n","\r\nimport './phonebook.moduls.css';\r\n\r\n\r\n\r\nexport default function ContactList({ contacts, onDeleteContact }) {\r\n   \r\n    return (\r\n        <div>\r\n            <h3>Контакты</h3>\r\n            <ul className=\"contact__list\">\r\n                {contacts.map(item => (\r\n                    <li key={item.id} className=\"list__item\">\r\n                        <p>{`${item.name} : ${item.number}`}</p>\r\n                        <button className=\"list__button\" onClick={() => onDeleteContact(item.id)}>Удалить</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}  \r\n\r\n","import { useState} from 'react';\r\nimport ContactForm from './ContactForm';\r\nimport ContactsList from './ContactsList';\r\n\r\n\r\nimport './phonebook.moduls.css';\r\n\r\n  \r\nexport default function Phonebook (){\r\n  const [contacts, setContacts]= useState([\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n  ]);\r\n  const [filter, setFilter] = useState('');    \r\n      \r\n    \r\n     const handleInputFilterChenge = event =>{\r\n        setFilter(event.currentTarget.value);\r\n      }\r\n\r\n      const handleButtonAdd = element =>{\r\n\r\n        const getUserByName = (arr, name) => arr.find(x => x.name === name);\r\n        const findsElement = getUserByName(contacts,element.name);\r\n\r\n              \r\n        if(findsElement) {\r\n            window.alert(`Пользователь с именем ${element.name} уже eсть в телефонной книге`)\r\n        } else{\r\n            setContacts(prevState => [...prevState.contacts,element]);\r\n            \r\n        }\r\n          \r\n      } \r\n\r\n\r\n     const deleteContact = (id) =>{\r\n          setContacts(prevState=> prevState.filter(contact => contact.id !== id))\r\n  }\r\n  \r\n  \r\n\r\n        const normolizefilter = filter.toLowerCase();\r\n        const visibleContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normolizefilter));\r\n        return(\r\n            <div>\r\n              \r\n                <h2>Телефонная книга</h2>\r\n                <ContactForm handleButtonAdd={handleButtonAdd}/>\r\n                <label>Фильтр для поиска</label>\r\n                <br/>\r\n                <input type=\"text\"\r\n                onChange={handleInputFilterChenge}\r\n                className=\"filter__input\"\r\n                />\r\n                <ContactsList contacts={visibleContacts} onDeleteContact={deleteContact}/>  \r\n                      \r\n            </div>   \r\n        )\r\n    \r\n} \r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/phonebook';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}